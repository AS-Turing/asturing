name: 🚀 Deploy Nuxt & Symfony to OVH

on:
  push:
    branches:
      - master

jobs:
  build_front:
    name: 🔧 Build Nuxt Static
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Install pnpm
        run: npm install -g pnpm

      - name: 📦 Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: ⚙️ Setup Nuxt .env
        working-directory: ./frontend
        run: echo "API_BASE_URL=https://www.as-turing.fr/api" > .env

      - name: 🛠 Generate static site
        working-directory: ./frontend
        run: pnpm run generate

      - name: 🧪 Verify build output
        run: ls -la frontend/.output/public
        
      - name: 📦 Upload Nuxt build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuxt-build
          path: frontend/.output/public/

  build_back:
    name: 🔧 Build Symfony Backend
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: 📦 Install Composer dependencies
        working-directory: ./backend
        run: composer install --no-dev --optimize-autoloader --no-scripts

  #     - name: ⚙️ Warmup Symfony cache (disabled due to DB)
  #       working-directory: ./backend
  #       run: |
  #         php bin/console cache:clear
  #         php bin/console cache:warmup

  deploy:
    name: 🚀 Deploy to OVH
    needs: [build_front, build_back]
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3

      - name: 📥 Download Nuxt build artifacts
        uses: actions/download-artifact@v3
        with:
          name: nuxt-build
          path: frontend/.output/public

      - name: 🔍 Check Nuxt output
        run: |
          if [ ! -d frontend/.output/public ]; then
            echo "❌ Build output not found!"
            exit 1
          fi
          echo "✅ Build output exists:"
          ls -la frontend/.output/public

      - name: 🚀 Deploy frontend via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/.output/public/*"
          target: "/home/asturiq/www/frontend"
          strip_components: 2

      - name: 🚀 Deploy backend via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "backend/*"
          target: "/home/asturiq/www/backend"
          strip_components: 1

      - name: ✅ Done
        run: echo "🎉 Deployed to OVH!"
